{% extends "layout.jinja" %}
{% block title %}{% endblock %}

{% block content %}
    
    <style>
        .plot {
            color:#97F7FF;
            width:100%; 
            height:100%;
        }

        .graph_container {
            background:#1AAABA; 
            border-radius : 20px;
            padding : 20px;
            width:90%; 
            height:400px;
            margin : auto;
            margin-top : 20px;
            margin-bottom : 40px;
        }
    </style>

    <h1><center>ICX Transaction Count</center></h1>
    <div class="graph_container"><div id="txcount" class="plot"></div></div>
    <h1><center>ICX Transaction Count</center></h1>
    <p><center>Transaction &gt; 1000 ICX only</center></p>
    <div class="graph_container"><div id="txcountbig" class="plot"></div></div>
    <h1><center>Average ICX holding</center></h1>
    <p><center>Mean of all wallets balance with at least 1 ICX</center></p>
    <div class="graph_container"><div id="avg_holding" class="plot"></div></div>
    <h1><center>ICON Wallet Growth</center></h1>
    <p><center>All ICON wallets (including empty wallets)</center></p>
    <div class="graph_container"><div id="holders_0" class="plot"></div></div>
    <h1><center>ICON Wallet Growth</center></h1>
    <p><center>&gt; 20k ICX only</center></p>
    <div class="graph_container"><div id="holders_1" class="plot"></div></div>
    <h1><center>ICON Wallet Growth</center></h1>
    <p><center>&gt; 100k ICX only</center></p>
    <div class="graph_container"><div id="holders_2" class="plot"></div></div>
    <h1><center>ICON Wallet Growth</center></h1>
    <p><center>&gt; 1M ICX only</center></p>
    <div class="graph_container"><div id="holders_3" class="plot"></div></div>
    <h1><center>Holder > 3 months</center></h1>
    <p><center>Wallets holding ICX for more than 3 months (excluding empty wallets)</center></p>
    <div class="graph_container"><div id="holding_3months" class="plot"></div></div>
    <h1><center>Active Wallets</center></h1>
    <p><center>Wallets that made a transfer in the last 24 hours</center></p>
    <div class="graph_container"><div id="active" class="plot"></div></div>

    <script type="text/javascript">

        // Darken a color
        function darkenColor(colorStr)
        {
            var color = Dygraph.toRGB_(colorStr);
            color.r = Math.floor((255 + color.r) / 2);
            color.g = Math.floor((255 + color.g) / 2);
            color.b = Math.floor((255 + color.b) / 2);
            return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';
        }

        // This function draws bars for a single series.
        function barChartPlotter(e)
        {
            var ctx = e.drawingContext;
            var points = e.points;
            var y_bottom = e.dygraph.toDomYCoord(0);

            ctx.fillStyle = "rgb(0, 125, 140)";

            // Find the minimum separation between x-values.
            // This determines the bar width.
            var min_sep = Infinity;
            for (var i = 1; i < points.length; i++) {
                var sep = points[i].canvasx - points[i - 1].canvasx;
                if (sep < min_sep) min_sep = sep;
            }
            var bar_width = Math.floor(min_sep);

            // Do the actual plotting.
            for (var i = 0; i < points.length; i++) {
                var p = points[i];
                var center_x = p.canvasx;

                ctx.fillRect(center_x - bar_width / 2, p.canvasy,
                    bar_width, y_bottom - p.canvasy);

                ctx.strokeRect(center_x - bar_width / 2, p.canvasy,
                    bar_width, y_bottom - p.canvasy);
            }
        }

        var pointFocus = function (g, series, ctx, cx, cy, color, radius) {
            ctx.lineWidth = 1;
            ctx.strokeStyle = "rgb(106, 205, 205)";
            ctx.fillStyle = "rgb(146, 255, 255)";
            ctx.beginPath();
            ctx.arc(cx, cy, radius, Math.PI * 2, false);
            ctx.closePath();
            ctx.stroke();
            ctx.fill();
        };

        // ===================================================================
        var txcount = {{txcount | safe}};
        txcount = txcount.map (x => [new Date(x[0]), x[1]])
        
        new Dygraph (
            document.getElementById("txcount"),
            txcount, {
                labels: ["Date", "Transaction Count"],
                labelsSeparateLines: true,
                animatedZooms: true,
                plotter: barChartPlotter,
                axisLineColor: 'rgb(146, 255, 255)',
                axes: {
                    y: {
                        drawGrid: true,
                        gridLinePattern: [4,4],
                        gridLineColor: 'rgb(146, 255, 255)',
                    },
                    x: {
                        drawGrid: false,
                    }
                },
                drawPointCallback: pointFocus,
                drawHighlightPointCallback : pointFocus
            }
        );

        // ===================================================================
        var txcountbig = {{txcountbig | safe}};
        txcountbig = txcountbig.map (x => [new Date(x[0]), x[1]])
        
        new Dygraph (
            document.getElementById("txcountbig"),
            txcountbig, {
                labels: ["Date", "Transaction Count"],
                labelsSeparateLines: true,
                animatedZooms: true,
                plotter: barChartPlotter,
                axisLineColor: 'rgb(146, 255, 255)',
                axes: {
                    y: {
                        drawGrid: true,
                        gridLinePattern: [4,4],
                        gridLineColor: 'rgb(146, 255, 255)',
                    },
                    x: {
                        drawGrid: false,
                    }
                },
                drawPointCallback: pointFocus,
                drawHighlightPointCallback : pointFocus
            }
        );

        holders_0 = {{holders_0 | safe}};
        holders_20k = {{holders_20k | safe}};
        holders_100k = {{holders_100k | safe}};
        holders_1m = {{holders_1m | safe}};
        holders_all = [holders_0, holders_20k, holders_100k, holders_1m];

        holders_all.forEach (function (holders, i)
        {
            holders = holders.map (x => [new Date(x[0]), x[1]])

            new Dygraph (
                document.getElementById("holders_" + i),
                holders, {
                    labels: ["Date", "Wallets"],
                    labelsSeparateLines: true,
                    animatedZooms: true,
                    plotter: barChartPlotter,
                    axisLineColor: 'rgb(146, 255, 255)',
                    axes: {
                        y: {
                            drawGrid: true,
                            gridLinePattern: [4,4],
                            gridLineColor: 'rgb(146, 255, 255)',
                        },
                        x: {
                            drawGrid: false,
                        }
                    },
                    drawPointCallback: pointFocus,
                    drawHighlightPointCallback : pointFocus
                }
            );
        });

        var avg_holding = {{avg_holding | safe}};
        avg_holding = avg_holding.map (x => [new Date(x[0]), x[1]])

        new Dygraph (
            document.getElementById("avg_holding"),
            avg_holding, {
                labels: ["Date", "Average ICX"],
                labelsSeparateLines: true,
                animatedZooms: true,
                axisLineColor: 'rgb(146, 255, 255)',
                logscale: true,
                fillGraph : true,
                axes: {
                    y: {
                        drawGrid: false,
                        gridLinePattern: [4,4],
                        gridLineColor: 'rgb(146, 255, 255)',
                    },
                    x: {
                        drawGrid: false,
                    }
                },
                drawPointCallback: pointFocus,
                drawHighlightPointCallback : pointFocus
            }
        );

        var holding_3months = {{holding_3months | safe}};
        holding_3months = holding_3months.map (x => [new Date(x[0]), x[1]])

        new Dygraph (
            document.getElementById("holding_3months"),
            holding_3months, {
                labels: ["Date", "Holder 3 months+"],
                labelsSeparateLines: true,
                animatedZooms: true,
                plotter: barChartPlotter,
                axisLineColor: 'rgb(146, 255, 255)',
                axes: {
                    y: {
                        drawGrid: true,
                        gridLinePattern: [4,4],
                        gridLineColor: 'rgb(146, 255, 255)',
                    },
                    x: {
                        drawGrid: false,
                    }
                },
                drawPointCallback: pointFocus,
                drawHighlightPointCallback : pointFocus
            }
        );

        var active = {{active | safe}};
        active = active.map (x => [new Date(x[0]), x[1]])

        new Dygraph (
            document.getElementById("active"),
            active, {
                labels: ["Date", "Active Wallets"],
                labelsSeparateLines: true,
                animatedZooms: true,
                plotter: barChartPlotter,
                axisLineColor: 'rgb(146, 255, 255)',
                axes: {
                    y: {
                        drawGrid: true,
                        gridLinePattern: [4,4],
                        gridLineColor: 'rgb(146, 255, 255)',
                    },
                    x: {
                        drawGrid: false,
                    }
                },
                drawPointCallback: pointFocus,
                drawHighlightPointCallback : pointFocus
            }
        );

    </script>
{% endblock %}