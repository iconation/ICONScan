{% extends "layout.jinja" %}
{% block title %}{% endblock %}

{% block content %}
    
    <h1>ICON Blockchain Transaction Count</h1>
    <div id="txcount" style="margin:20px; padding:20px; width:80%; height:500px;"></div>

    <h1>ICON Blockchain Average ICX Transfer Amount</h1>
    <div id="avgicx" style="margin:20px; padding:20px; width:80%; height:500px;"></div>

    <script type="text/javascript">

        // Darken a color
        function darkenColor(colorStr)
        {
            // Defined in dygraph-utils.js
            var color = Dygraph.toRGB_(colorStr);
            color.r = Math.floor((255 + color.r) / 2);
            color.g = Math.floor((255 + color.g) / 2);
            color.b = Math.floor((255 + color.b) / 2);
            return 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';
        }

        // This function draws bars for a single series. See
        // multiColumnBarPlotter below for a plotter which can draw multi-series
        // bar charts.
        function barChartPlotter(e)
        {
            var ctx = e.drawingContext;
            var points = e.points;
            var y_bottom = e.dygraph.toDomYCoord(0);

            ctx.fillStyle = darkenColor(e.color);

            // Find the minimum separation between x-values.
            // This determines the bar width.
            var min_sep = Infinity;
            for (var i = 1; i < points.length; i++) {
                var sep = points[i].canvasx - points[i - 1].canvasx;
                if (sep < min_sep) min_sep = sep;
            }
            var bar_width = Math.floor(2.0 / 3 * min_sep);

            // Do the actual plotting.
            for (var i = 0; i < points.length; i++) {
                var p = points[i];
                var center_x = p.canvasx;

                ctx.fillRect(center_x - bar_width / 2, p.canvasy,
                    bar_width, y_bottom - p.canvasy);

                ctx.strokeRect(center_x - bar_width / 2, p.canvasy,
                    bar_width, y_bottom - p.canvasy);
            }
        }

        var txcount = {{txcount | safe}};
        txcount = txcount.map (x => [new Date(x[0]), x[1]])
        new Dygraph (
            document.getElementById("txcount"),
            txcount, {
                legend: 'always',
                labels: ["Date", "Transaction Count"],
                labelsSeparateLines: true,
                animatedZooms: true,
                rangeSelectorPlotFillColor: 'MediumSlateBlue',
                rangeSelectorPlotFillGradientColor: 'rgba(123, 104, 238, 0)',
                plotter: barChartPlotter,
                gridLineColor: 'rgb(196, 196, 196)',
            }
        );

        var avgicx = {{avgicx | safe}};
        avgicx = avgicx.map (x => [new Date(x[0]), x[1]])
        new Dygraph (
            document.getElementById("avgicx"),
            avgicx, {
                legend: 'always',
                labels: ["Date", "Average ICX Transfer Amount"],
                labelsSeparateLines: true,
                animatedZooms: true,
                rangeSelectorPlotFillColor: 'MediumSlateBlue',
                rangeSelectorPlotFillGradientColor: 'rgba(123, 104, 238, 0)',
                plotter: barChartPlotter,
                gridLineColor: 'rgb(196, 196, 196)',
            }
        );
    </script>
{% endblock %}